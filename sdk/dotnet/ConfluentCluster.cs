// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kafkacluster
{
    [KafkaclusterResourceType("kafkacluster:index:ConfluentCluster")]
    public partial class ConfluentCluster : global::Pulumi.ComponentResource
    {
        /// <summary>
        /// Name of the Confluent environment that was created
        /// </summary>
        [Output("envId")]
        public Output<string> EnvId { get; private set; } = null!;

        /// <summary>
        /// URL for the Kafka environment.
        /// </summary>
        [Output("kafkaUrl")]
        public Output<string> KafkaUrl { get; private set; } = null!;


        /// <summary>
        /// Create a ConfluentCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfluentCluster(string name, ConfluentClusterArgs args, ComponentResourceOptions? options = null)
            : base("kafkacluster:index:ConfluentCluster", name, args ?? new ConfluentClusterArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi-pequod/pequod-mlc-kafkacluster",
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class ConfluentClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name to use for kafka cluster display name.
        /// </summary>
        [Input("kafkaClusterName", required: true)]
        public Input<string> KafkaClusterName { get; set; } = null!;

        [Input("kafkaTopics", required: true)]
        private InputList<string>? _kafkaTopics;

        /// <summary>
        /// Array of topics for the kafka cluster.
        /// </summary>
        public InputList<string> KafkaTopics
        {
            get => _kafkaTopics ?? (_kafkaTopics = new InputList<string>());
            set => _kafkaTopics = value;
        }

        /// <summary>
        /// Region for cluster. Default is region used by rest of stack.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ConfluentClusterArgs()
        {
        }
        public static new ConfluentClusterArgs Empty => new ConfluentClusterArgs();
    }
}
